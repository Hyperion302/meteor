name: Test and Build Docker Images

on:
  push:
    branches: [master]

# Environment variables available to all jobs and steps in this workflow
env:
  # GCP Vars
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  # Publish vars
  GITHUB_SHA: ${{ github.sha }}
  MAIN_IMAGE: swish-main
  SSR_IMAGE: swish-ssr
  GH_HOSTNAME: docker.pkg.github.com
  GH_REPO_REF: hyperion302/swish
  GCR_HOSTNAME: gcr.io

jobs:
  main:
    name: Main Service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node v10.x
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: Setup gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Cache Dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm install
      - name: Test
        run: npm run test:coverage
      - name: Build App
        run: npm run build
      - name: Build Image
        run: |
          docker build \
          -t "$GCR_HOSTNAME/$GCP_PROJECT_ID/$MAIN_IMAGE:$GITHUB_SHA" \
          -t "$GH_HOSTNAME/$GH_REPO_REF/$MAIN_IMAGE:$GITHUB_SHA" \
          .
      - name: Login to GH docker server
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com # default: index.docker.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Image to GH
        run: |
          docker push "$GH_HOSTNAME/$GH_REPO_REF/$MAIN_IMAGE:$GITHUB_SHA"
      - name: Configure docker with gcloud
        run: |
          gcloud --quiet auth configure-docker
      - name: Publish Image to GCR
        run: |
          docker push "$GCR_HOSTNAME/$GCP_PROJECT_ID/$MAIN_IMAGE:$GITHUB_SHA"
  ssr:
    name: SSR Service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web/swish
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node v10.x
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: Setup gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Login to GH docker server
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com # default: index.docker.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull last build from GH
        run: |
          docker pull "$GH_HOSTNAME/$GH_REPO_REF/$SSR_IMAGE" || true
      - name: Build image using cache
        run: |
          docker build \
          -t "$GCR_HOSTNAME/$GCP_PROJECT_ID/$SSR_IMAGE:$GITHUB_SHA" \
          -t "$GH_HOSTNAME/$GH_REPO_REF/$SSR_IMAGE:$GITHUB_SHA" \
          --cache-from="$GH_HOSTNAME/$GH_REPO_REF/$SSR_IMAGE" \
          .
      - name: Publish Image to GH
        run: |
          docker push "$GH_HOSTNAME/$GH_REPO_REF/$SSR_IMAGE:$GITHUB_SHA"
      - name: Configure docker with gcloud
        run: |
          gcloud --quiet auth configure-docker
      - name: Publish Image to GCR
        run: |
          docker push "$GCR_HOSTNAME/$GCP_PROJECT_ID/$SSR_IMAGE:$GITHUB_SHA"
