name: Build and Deploy to GKE

on:
  push:
    branches: [master]

# Environment variables available to all jobs and steps in this workflow
env:
  # GCP Vars
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  # Deploy vars
  GKE_ZONE: us-central1-a
  GKE_CLUSTER: swish-dev
  RELEASE_NAME: swishdepl
  # Publish vars
  GITHUB_SHA: ${{ github.sha }}
  IMAGE: swish-app
  REGISTRY_HOSTNAME: gcr.io

jobs:
  test-build-publish-backend:
    name: Test, Build, and Publish the Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node v10.x
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: Cache Dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm install
      - name: Test
        run: npm run test:coverage
      - name: Build App
        run: npm run build
      - name: Build Image and Publish
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          path: backend
          registry: docker.pkg.github.com
          repository: hyperion302/swish/swish-app
          tag_with_sha: true
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: test-build-publish-backend
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Configure kubectl with gcloud
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GCP_PROJECT_ID
      - name: Bake Secrets
        uses: azure/k8s-bake@v1
        with:
          renderEngine: 'helm'
          helm-version: 'v3.1.2'
          helmChart: 'backend/swish'
          silent: false
          overrides: |
            secretGCP: ${{ secrets.GCP }}
            secretDEVMUXID: ${{ secrets.DEVMUXID }}
            secretDEVMUXSECRET: ${{ secrets.DEVMUXSECRET }}
            secretPRODMUXID: ${{ secrets.PRODMUXID }}
            secretPRODMUXSECRET: ${{ secrets.PRODMUXSECRET }}
            secretALGOLIAID: ${{ secrets.ALGOLIAID }}
            secretALGOLIASECRET: ${{ secrets.ALGOLIASECRET }}
            secretTLSCRT: ${{ secrets.TLSCRT }}
            secretTLSKEY: ${{ secrets.TLSKEY }}
            secretDockerUser: ${{ secrets.DOCKERUSER }}
            secretDockerPass: ${{ secrets.DOCKERPASS }}
    #  - name: Install Helm
    #    uses: azure/setup-helm@v1
    #    with:
    #      version: 'v3.1.2' # default is latest stable
    #  - name: Bake In Secrets
    #    run: |
    #      helm template $RELEASE_NAME swish \
    #      --set "secretGCS='$SECR_GCP'" \
    #      --set "secretDEVMUXID='$SECR_DEVMUXID'" \
    #      --set "secretDEVMUXSECRET='$SECR_DEVMUXSECRET'" \
    #      --set "secretPRODMUXID='$SECR_PRODMUXID'" \
    #      --set "secretPRODMUXSECRET='$SECR_PRODMUXSECRET'" \
    #      --set "secretALGOLIAID='$SECR_ALGOLIAID'" \
    #      --set "secretALGOLIASECRET='$SECR_ALGOLIASECRET'" \
    #      --set "secretTLSCRT='$SECR_TLSCRT'" \
    #      --set "secretTLSKEY='$SECR_TLSKEY'" \
    #      --set "secretDockerUser='$SECR_DockerUser'" \
    #      --set "secretDockerPass='$SECR_DockerPass'"
    #    env:
    #      SECR_GCP: ${{ secrets.GCP }}
    #      SECR_DEVMUXID: ${{ secrets.DEVMUXID }}
    #      SECR_DEVMUXSECRET: ${{ secrets.DEVMUXSECRET }}
    #      SECR_PRODMUXID: ${{ secrets.PRODMUXID }}
    #      SECR_PRODMUXSECRET: ${{ secrets.PRODMUXSECRET }}
    #      SECR_ALGOLIAID: ${{ secrets.ALGOLIAID }}
    #      SECR_ALGOLIASECRET: ${{ secrets.ALGOLIASECRET }}
    #      SECR_TLSCRT: ${{ secrets.TLSCRT }}
    #      SECR_TLSKEY: ${{ secrets.TLSKEY }}
    #      SECR_DockerUser: ${{ secrets.DOCKERUSER }}
    #      SECR_DockerPass: ${{ secrets.DOCKERPASS }}
    #- name: Deploy
    #  run: |
    #    gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GCP_PROJECT_ID
    #    kubectl get services -o wide
