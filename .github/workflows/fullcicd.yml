name: Build and Deploy to GKE

on:
  push:
    branches: [master]

# Environment variables available to all jobs and steps in this workflow
env:
  # GCP Vars
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  # Deploy vars
  GKE_ZONE: us-central1-a
  GKE_CLUSTER: swish-dev
  DEPLOYMENT_NAME: swishdepl
  SECRET_GCS: ${{ secrets.GCS }}
  SECRET_DEVMUXID: ${{ secrets.DEVMUXID }}
  SECRET_DEVMUXSECRET: ${{ secrets.DEVMUXSECRET }}
  SECRET_PRODMUXID: ${{ secrets.PRODMUXID }}
  SECRET_PRODMUXSECRET: ${{ secrets.PRODMUXSECRET }}
  SECRET_ALGOLIAID: ${{ secrets.ALGOLIAID }}
  SECRET_ALGOLIASECRET: ${{ secrets.ALGOLIASECRET }}
  SECRET_TLSCRT: ${{ secrets.TLSCRT }}
  SECRET_TLSKEY: ${{ secrets.TLSKEY }}
  SECRET_DockerUser: ${{ secrets.DOCKERUSER }}
  SECRET_DockerPass: ${{ secrets.DOCKERPASS }}
  # Publish vars
  GITHUB_SHA: ${{ github.sha }}
  IMAGE: swish-app
  PROJECT_ID: meteor-247517
  REGISTRY_HOSTNAME: gcr.io

jobs:
  test-build-publish-backend:
    name: Test, Build, and Publish the Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node v10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - name: Cache Dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install Dependencies
      run: npm install
    - name: Test
      run: npm run test:coverage
    - name: Build App
      run: npm run build
    - name: Build Image and Publish
      uses: docker/build-push-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        path: backend
        registry: docker.pkg.github.com
        repository: hyperion302/swish/swish-app
        tag_with_sha: true
  deploy-backend:
      name: Deploy Backend
      runs-on: ubuntu-latest
      needs: test-build-publish-backend
      defaults:
        run:
          working-directory: backend
      steps: 
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Configure kubectl with gcloud
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GCP_PROJECT_ID
      - name: Bake In Secrets
        uses: azure/k8s-bake@v1
        with:
          renderEngine: 'helm'
          helmChart: './swish/'
          overrides: |
            secretGCS:${{ secrets.GCS }}
            secretDEVMUXID:${{ secrets.DEVMUXID }}
            secretDEVMUXSECRET:${{ secrets.DEVMUXSECRET }}
            secretPRODMUXID:${{ secrets.PRODMUXID }}
            secretPRODMUXSECRET:${{ secrets.PRODMUXSECRET }}
            secretALGOLIAID:${{ secrets.ALGOLIAID }}
            secretALGOLIASECRET:${{ secrets.ALGOLIASECRET }}
            secretTLSCRT:${{ secrets.TLSCRT }}
            secretTLSKEY:${{ secrets.TLSKEY }}
            secretDockerUser:${{ secrets.DOCKERUSER }}
            secretDockerPass:${{ secrets.DOCKERPASS }}
      - name: Checkpoint
        run: |
          helm template $DEPLOYMENT_NAME swish
      #- name: Deploy
      #  run: |
      #    gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GCP_PROJECT_ID
      #    kubectl get services -o wide
