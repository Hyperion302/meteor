name: Build and Deploy to GKE

on:
  push:
    branches: [master]

# Environment variables available to all jobs and steps in this workflow
env:
  # GCP Vars
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  # Deploy vars
  GKE_ZONE: us-central1-a
  GKE_CLUSTER: swish-dev
  RELEASE_NAME: swishdepl
  # Publish vars
  GITHUB_SHA: ${{ github.sha }}
  MAIN_IMAGE: swish-main
  SSR_IMAGE: swish-ssr
  GH_HOSTNAME: docker.pkg.github.com
  GH_REPO_REF: hyperion302/swish
  GCR_HOSTNAME: gcr.io

jobs:
  test-build-publish-main:
    name: Test, Build, and Publish the Main Service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node v10.x
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: Setup gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Cache Dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm install
      - name: Test
        run: npm run test:coverage
      - name: Build App
        run: npm run build
      - name: Build Image
        run: |
          docker build \
          -t "$GCR_HOSTNAME/$GCP_PROJECT_ID/$MAIN_IMAGE:$GITHUB_SHA" \
          -t "$GH_HOSTNAME/$GH_REPO_REF/$MAIN_IMAGE:$GITHUB_SHA" \
          .
      - name: Login to GH docker server
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com # default: index.docker.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Image to GH
        run: |
          docker push "$GH_HOSTNAME/$GH_REPO_REF/$MAIN_IMAGE:$GITHUB_SHA"
      - name: Configure docker with gcloud
        run: |
          gcloud --quiet auth configure-docker
      - name: Publish Image to GCR
        run: |
          docker push "$GCR_HOSTNAME/$GCP_PROJECT_ID/$MAIN_IMAGE:$GITHUB_SHA"
  build-publish-ssr:
    name: Build and Publish the SSR Service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web/swish
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node v10.x
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: Setup gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Login to GH docker server
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com # default: index.docker.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull last build from GH
        run: |
          docker pull "$GH_HOSTNAME/$GH_REPO_REF/$SSR_IMAGE" || true
      - name: Build image using cache
        run: |
          docker build \
          -t "$GCR_HOSTNAME/$GCP_PROJECT_ID/$SSR_IMAGE:$GITHUB_SHA" \
          -t "$GH_HOSTNAME/$GH_REPO_REF/$SSR_IMAGE:$GITHUB_SHA" \
          --cache-from="$GH_HOSTNAME/$GH_REPO_REF/$SSR_IMAGE" \
          .
      - name: Publish Image to GH
        run: |
          docker push "$GH_HOSTNAME/$GH_REPO_REF/$SSR_IMAGE:$GITHUB_SHA"
      - name: Configure docker with gcloud
        run: |
          gcloud --quiet auth configure-docker
      - name: Publish Image to GCR
        run: |
          docker push "$GCR_HOSTNAME/$GCP_PROJECT_ID/$SSR_IMAGE:$GITHUB_SHA"
  deploy:
    name: Deploy to Produciton
    runs-on: ubuntu-latest
    needs:
      - test-build-publish-main
      - build-publish-ssr
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Configure kubectl with gcloud
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GCP_PROJECT_ID
      - name: Bake Secrets
        uses: azure/k8s-bake@v1
        with:
          renderEngine: 'helm'
          helm-version: 'v3.1.2'
          helmChart: 'backend/swish'
          releaseName: swishdepl
          overrides: |
            secretGCP:${{ secrets.GCP }}
            secretDEVMUXID:${{ secrets.DEVMUXID }}
            secretDEVMUXSECRET:${{ secrets.DEVMUXSECRET }}
            secretPRODMUXID:${{ secrets.PRODMUXID }}
            secretPRODMUXSECRET:${{ secrets.PRODMUXSECRET }}
            secretALGOLIAID:${{ secrets.ALGOLIAID }}
            secretALGOLIASECRET:${{ secrets.ALGOLIASECRET }}
            secretTLSCRT:${{ secrets.TLSCRT }}
            secretTLSKEY:${{ secrets.TLSKEY }}
            main.dockerTag:${{ github.sha }}
            main.dockerImage:${{ secrets.GCP_PROJECT_ID }}/swish-main
            main.dockerRepo:gcr.io
            ssr.dockerTag:${{ github.sha }}
            ssr.dockerImage:${{ secrets.GCP_PROJECT_ID }}/swish-ssr
            ssr.dockerRepo:gcr.io
        id: bake
      - name: Deploy
        run: |
          kubectl apply -f $MANIFESTS
        env:
          MANIFESTS: ${{ steps.bake.outputs.manifestsBundle }}
