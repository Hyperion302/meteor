stages:
    - setup
    - build
    - test
    - release
    - deploy

variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_BUILD_REF_NAME}_${CI_BUILD_REF}
    CONTAINER_IMAGE_LATEST: ${CI_REGISTRY_IMAGE}:latest

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        # Cache node_modules
        - backend/node_modules

setup_backend:
    image: node:13
    stage: setup
    script:
        # Configure NPM to cache node modules
        - cd backend && npm install --prefer-offline

build_backend:
    image: node:13
    stage: build
    script:
        - cd backend && npm run build
    artifacts:
        paths:
            - ${CI_PROJECT_DIR}/backend/dist/

test_backend:
    image: node:13
    stage: test
    script:
        - cd backend && npm run test:coverage

release_backend:
    image: docker:19
    stage: release
    before_script:
        - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    script:
        - cd backend
        - docker pull ${CONTAINER_IMAGE_LATEST}
        - docker build -t ${CONTAINER_IMAGE} --cache-from ${CONTAINER_IMAGE_LATEST} .
        - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE_LATEST}
        - docker push ${CONTAINER_IMAGE}
        - docker push ${CONTAINER_IMAGE_LATEST}
